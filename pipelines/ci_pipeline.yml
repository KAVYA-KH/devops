# WorkSpace Imp Note
# When you run an agent pool job, it creates a workspace on the agent. The workspace is a directory in which it downloads the source, runs steps, and produces outputs. The workspace directory can be referenced in your job using Pipeline.Workspace variable. Under this, various sub-directories are created:
# $(Build.SourcesDirectory) is where tasks download the application's source code.
# $(Build.ArtifactStagingDirectory) is where tasks download artifacts needed for the pipeline or upload artifacts before they are published.
# $(Build.BinariesDirectory) is where tasks write their outputs.
# $(Common.TestResultsDirectory) is where tasks upload their test results.

trigger: none

pool:
  name: LOCAL

variables:
  tag: '$(Build.BuildId)'
  rel_name: eck-'$(Build.BuildId)'
  k_namespace: dev
  k_ServiceEndpoint: dev_end_point


parameters:
- name: doThing
  default: true
  type: boolean


stages:

- stage: Stage0
  jobs:
  - job: Stage0Job0
    steps:
    - script: echo I did a thing
      condition: and(succeeded(), eq('${{ parameters.doThing }}', true))
      displayName: IfLoopTest
    - bash: echo "Lets see it will come or not"
      displayName: It will come here or not


- stage: Stage1
  dependsOn: Stage0
  condition: succeeded('Stage0')
  jobs:
  - job: Stage1Job1
    displayName: TEST
    timeoutInMinutes: 30
    container:
      image: docker/agent:v1
      options: --hostname container-test
    workspace:
        clean: all  #what to clean up before the job runs [https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml#workspace]

    steps:
    - task: Kubernetes@1
      displayName: K8s Login
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: '$(k_ServiceEndpoint)'
        namespace: '$(k_namespace)'
        command: 'login'
        
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo "test"
      displayName: Display


- stage: Stage2
  dependsOn:
  - Stage0
  - Stage1
  condition: succeeded('Stage1')
  jobs:
  - job: Stage2Job1
    displayName: MVN_test
    timeoutInMinutes: 30
    container: docker/agent:v1
    steps:
    - script: |
        echo `helm version`
        echo "Hostname:" `hostname`
      displayName: parameter 

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo "test"
      displayName: Display
